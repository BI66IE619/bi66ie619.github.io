name: API Backend

on: [push, workflow_dispatch]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start API Server
        run: |
          echo "Starting API Server..."
          echo "const express = require('express');" >> server.js
          echo "const cors = require('cors');" >> server.js
          echo "const axios = require('axios');" >> server.js
          echo "const app = express();" >> server.js
          echo "app.use(cors());" >> server.js
          echo "app.use(express.json());" >> server.js
          echo "app.post('/api/get-answer', async (req, res) => {" >> server.js
          echo "    const API_KEY = '${{ secrets.OPENAI_API_KEY }}';" >> server.js
          echo "    try {" >> server.js
          echo "        const response = await axios.post('https://api.openai.com/v1/chat/completions', {" >> server.js
          echo "            model: 'gpt-4-turbo'," >> server.js
          echo "            messages: [{" >> server.js
          echo "                role: 'system', content: 'Solve the extracted homework question(s) accurately.'" >> server.js
          echo "            }, { role: 'user', content: req.body.text }]" >> server.js
          echo "        }, { headers: { 'Authorization': 'Bearer ' + API_KEY, 'Content-Type': 'application/json' } });" >> server.js
          echo "        res.json(response.data.choices[0].message.content);" >> server.js
          echo "    } catch (error) {" >> server.js
          echo "        res.status(500).json({ error: 'Failed to get a response from OpenAI.' });" >> server.js
          echo "    }" >> server.js
          echo "});" >> server.js
          echo "app.listen(3000, () => console.log('Server running on port 3000'));" >> server.js

          node server.js &
        shell: bash
